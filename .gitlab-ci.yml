stages:
  - build
  - test
  - deploy

variables:
  # 内置环境变量 https://docs.gitlab.com/ee/ci/variables/
  # $DOCKER_USER $DOCKER_PWD 在settings CI/CD中的Secret variables配置，如果是protected表示保护分支有效
  DEV_TAG: develop
  PROD_TAG: release
  REPO: {{ dockerRepositoryUrl }} # docker镜像地址
  GIT_PROJECT_ADDRESS: {{ gitRepositoryUrl }} # 项目地址，如：ssh://git@git.xxx.com:40001/group/myProject.git
  PROJECT_REPO_NAME: {{ projectName }} # 项目名，如：myProject

before_script:
  - docker login -u ${{ dockerUser }} -p ${{ dockerPassword }} {{ dockerLoginUrl }} # 对应项目CI/CD的settings中Secret variables添加DOCKER_USER, DOCKER_PWD变量，并确保变量名唯一。
  - mkdir $PROJECT_REPO_NAME
  - cd $PROJECT_REPO_NAME
  - git init
  - git remote add origin $GIT_PROJECT_ADDRESS
  - git fetch --depth=1 origin $CI_COMMIT_SHA
  - git reset --hard FETCH_HEAD
  - export DATE=$(date +%Y%m%d)
  - export TAG_SUFFIX="ci_${DATE}_${CI_COMMIT_SHA}"
  - echo 'TAG_SUFFIX:' $TAG_SUFFIX
  - echo 'commit id full:' $CI_COMMIT_SHA
  - echo 'commit user:' $GITLAB_USER_NAME

# develop
build:
  stage: build
  script:
    - sh build/build.sh $REPO ${DEV_TAG}_${TAG_SUFFIX}
  allow_failure: false

# test
test:
  stage: test
  when: manual
  script:
    - sh build/test.sh $REPO:${DEV_TAG}_${TAG_SUFFIX}
  allow_failure: false
  dependencies:
    - build

# production
deploy:
  stage: deploy
  when: manual
  only:
    - master
  script:
    - sh build/deploy.sh $REPO:${PROD_TAG}_${TAG_SUFFIX}
  allow_failure: false
  dependencies:
    - test
